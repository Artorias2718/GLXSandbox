/*
    This is an example of a fragment shader
*/

#include "../Shaders.inc"

// Entry Point
//============

#if defined D3D_API 
void main(

	// Input
	//======

	// The GPU provides us with position
	in float4 i_position : SV_POSITION,
	in float4 i_color : COLOR,
    in float2 i_texture : TEXTURE,
    
	// Output
	//=======

	// Whatever color value is output from the fragment shader
	// will determine the color of the corresponding pixel on the screen
	out float4 o_color : SV_TARGET

	)
#elif defined OGL_API 

// Input
//======

// Whatever arbitrary data (i.e. everything excluding position) was output from the vertex shader
// will be interpolated across the triangle and given as input to the fragment shader
layout( location = 0 ) in vec4 i_color;
layout( location = 1 ) in vec2 i_texture;

// Output
//=======

// Whatever color value is output from the fragment shader
// will determine the color of the corresponding pixel on the screen
out vec4 o_color;

// Entry Point
//============

void main()
#endif
{
	float4 t_color =
#if defined D3D_API 
	textureSampler.Sample( samplingState, i_texture );
#elif defined OGL_API 
	texture2D( textureSampler, i_texture );
#endif

	o_color = g_color * i_color * t_color;
}